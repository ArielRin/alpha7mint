import {
  lib_exports25 as lib_exports
} from "./chunk-NZXOUVKI.js";
import "./chunk-RKWPDL76.js";
import "./chunk-DQWUDKQA.js";
import "./chunk-33SFPC5N.js";
import "./chunk-EO32CZBH.js";

// node_modules/@wagmi/core/providers/jsonRpc/dist/wagmi-core-providers-jsonRpc.esm.js
function jsonRpcProvider(_ref) {
  let {
    pollingInterval,
    priority,
    rpc,
    stallTimeout,
    static: static_ = true,
    weight
  } = _ref;
  return function(chain) {
    const rpcConfig = rpc(chain);
    if (!rpcConfig || rpcConfig.http === "")
      return null;
    return {
      chain: {
        ...chain,
        rpcUrls: {
          ...chain.rpcUrls,
          default: rpcConfig.http
        }
      },
      provider: () => {
        var _chain$ens;
        const RpcProvider = static_ ? lib_exports.StaticJsonRpcProvider : lib_exports.JsonRpcProvider;
        const provider = new RpcProvider(rpcConfig.http, {
          ensAddress: (_chain$ens = chain.ens) === null || _chain$ens === void 0 ? void 0 : _chain$ens.address,
          chainId: chain.id,
          name: chain.network
        });
        if (pollingInterval)
          provider.pollingInterval = pollingInterval;
        return Object.assign(provider, {
          priority,
          stallTimeout,
          weight
        });
      },
      ...rpcConfig.webSocket && {
        webSocketProvider: () => new lib_exports.WebSocketProvider(rpcConfig.webSocket, chain.id)
      }
    };
  };
}
export {
  jsonRpcProvider
};
//# sourceMappingURL=wagmi_providers_jsonRpc.js.map
